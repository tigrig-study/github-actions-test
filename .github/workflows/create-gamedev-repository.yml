name: 'YouthSignal ゲーム開発リポジトリ作成'

# このワークフローは、 ゲーム開発リポジトリ（ youthsignal-volume-? ）を生成するためのものです。

# 実行には、予め以下の作業をしておく必要があります。
# - GitHub Apps による認証トークン取得（以下設定すべき Permission ）
#   - Repository
#     - Administration: Read and write
#     - Contents: Read and write
#   - Organization
#     - Members: Read and write
# - リポジトリの Secrets に上記 GitHub Apps の ID と PRIVATE_KEY を定義 → APP_ID, APP_PRIVATE_KEY
# - リポジトリの Variables に、ゲーム開発用リポジトリの編集権限を与える team の名前を定義 → EMPOWERED_TEAM_NAME

# 具体的には以下のような処理を行っています。
# - エンジンリポジトリを Fork → ゲーム開発用リポジトリとする
# - Variables の EMPOWERED_TEAM_NAME に定義されている team に対して、ゲーム開発用リポジトリの write 権限を与える
# - ゲーム開発用リポジトリの説明文に、本ワークフローの手動実行入力値 repository_description を設定
# - ゲーム開発用リポジトリの README.md を、本ワークフローの手動実行入力値 repository_name + repository_description で上書き

# ※将来的な改善点
# - スクリプトの分割 → 可読性向上
# - エラー処理の実装 → 何らかのエラーが発生した場合、ワークフローが正しく停止するようにする
# - APIバージョンの指定 → 複数箇所で API バージョンを指定しているため一元化、および常に最新の API バージョンを使用使用できるようにする

on:
  # 手動実行トリガー
  workflow_dispatch:
    inputs:
      repository_name:
        description: 'リポジトリ名（例: youthsignal-volume-24）'
        required: true
      repository_description:
        description: 'リポジトリの説明文（例: YouthSignal Volume24 - 第二章 Part14）'

jobs:
  # ゲーム開発用リポジトリの作成
  create-gamedev-repository:
    runs-on: ubuntu-latest

    timeout-minutes: 3

    steps:
      # デバッグ用: イベントの内容を表示する
      - name: Debug event payload
        run: cat $GITHUB_EVENT_PATH

      # GitHub Apps による認証トークンの発行
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      # エンジンリポジトリをフォーク（ワークフロー実行時に指定された『リポジトリ名』を使用）
      # ※ gh api でフォークすると、フォーク完了を待たずに次の処理が走ってしまうため、 await 出来る actions/github-script を使っている
      - name: Fork repository
        uses: actions/github-script@v6.4.0
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            const { data } = await github.rest.repos.createFork({
              owner: context.repo.owner,
              repo: context.repo.repo,
              organization: context.repo.owner,
              default_branch_only: true,
              name: '${{ inputs.repository_name }}'
            });

      # ゲーム開発リポジトリの description を更新
      - name: Update repository description
        run: |
          gh repo edit ${{ github.repository_owner }}/${{ inputs.repository_name }} \
            --description='${{ inputs.repository_description }}'
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      # ゲーム開発リポジトリの write 権限付与
      # - 付与対象: vars.EMPOWERED_TEAM_NAME に定義されている team
      - name: Add team repository permissions
        run: |
          gh api \
            --method PUT \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            orgs/${{ github.repository_owner }}/teams/${{ vars.EMPOWERED_TEAM_NAME }}/repos/${{ github.repository_owner }}/${{ inputs.repository_name }} \
            -f permission='push'
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      # ゲーム開発リポジトリをクローン
      - name: Clone GameDev Repository
        run: |
          # --sparse --filter=blob:none オプションをつけてクローンを軽量化
          gh repo clone ${{ github.repository_owner }}/${{ inputs.repository_name }} gamedev-repo -- --sparse --filter=blob:none
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      # README.md の内容を リポジトリ名 + 説明文 に上書き
      - name: Update README.md
        run: |
          echo -e "# ${{ inputs.repository_name }}\n\n${{ inputs.repository_description }}" > README.md
        working-directory: ./gamedev-repo
      - name: Commit & Push
        run: |
          # 下記を実行しないと、 `fatal: could not read Username for 'https://github.com': No such device or address` が発生する
          git config url."https://x-oauth-basic:$GH_TOKEN@github.com/".insteadOf "https://github.com/"
          git config user.name actions-user[bot]
          git config user.email action@github.com
          git add .
          git commit -m 'Initialize README.md'
          git push
        working-directory: ./gamedev-repo
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
